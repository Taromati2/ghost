OnRetroSnaker{
	if QuickStartVersion{
		NeedUpdate
		return
	}
	DiscordCustomSet.CustomDetail('贪吃蛇')
	--
	playRetroSnaker = 1
	running='playRetroSnaker'
	Started = 1
	GameOver=0
	Paused=0
	Left = 1
	Right = 2
	Up = 3
	Down = 4
	SDirect=Right
	Score = 0
	food.yes=1/*1表示需要出现新食物,0表示已经存在食物*/
	RetroSnaker.life=0/*活着*/
	//if !RetroSnaker.speed
		RetroSnaker.speed=1
	//if RetroSnaker.speed>9
		//RetroSnaker.speed=9
	if !RetroSnaker.timespeed
		RetroSnaker.timespeed=250
	NumScores=5
	SMapX=28
	SMapY=28
	RetroSnaker.node=3
	RetroSnaker.x=IARRAY
	RetroSnaker.y=IARRAY
	RetroSnaker.x[0]=12;RetroSnaker.y[0]=10/*蛇头*/
	RetroSnaker.x[1]=11;RetroSnaker.y[1]=10
	RetroSnaker.x[2]=10;RetroSnaker.y[2]=10
	//RetroSnaker.x[3]=13;RetroSnaker.y[3]=10
	//RetroSnaker.x[4]=14;RetroSnaker.y[4]=10
	RetroSnaker=IARRAY
	RetroSnaker_=IARRAY
	PaintRetroSnaker
}
OnRetroSnakerTimer{
	_txt='\C\![quicksession,true]\c\b[2]'
	if !GameOver && Started && !Paused{
		_txt+=RetroSnaker.Move(SDirect)
		_txt+=CheckRetroSnakerStatus
	}
	_txt+PaintRetroSnaker
}
RetroSnakerKey{
	_txt = '\C\![quicksession,true]\c'
	if reference0 == 'n'		{	_txt+=OnRetroSnaker					}
	elseif reference0 == 'l'	{	_txt+=OnShowRetroSnakerHighScores	}
	elseif reference0 == 'e'	{	OnRetroSnakerGameOver;break			}
	elseif reference0 == 'p'	{	Paused=TOINT(Paused+1)%2			}
	if !GameOver && Started && !Paused{
		//SDirect = 0
		case reference0{
			if reference0 =='left' && SDirect!=2		{	SDirect=Left	}
			elseif reference0 =='right' && SDirect!=1	{	SDirect=Right	}
			elseif reference0 =='up' && SDirect!=4		{	SDirect=Up		}
			elseif reference0 =='down' && SDirect!=3	{	SDirect=Down	}
		}
		if SDirect{
			_txt+=RetroSnaker.Move(SDirect)
			_txt+=CheckRetroSnakerStatus
		}
	}
	if playRetroSnaker
		_txt+PaintRetroSnaker
	else
		_txt
}
PaintRetroSnaker{
	_txt="\C\![quicksession,true]\c\b[2]\![set,choicetimeout,%(RetroSnaker.timespeed)]"
	_txt+='游戏操作:\n左，右，上，下移光标键。键盘N：新游戏。键盘L：排行榜。键盘P：暂停/继续游戏。键盘E：退出游戏'
	_txt+="\n\节数：%(RetroSnaker.node)   \_l[80,-]速度：%(RetroSnaker.speed)   \_l[160,-]得分：%(Score)    \_l[240,-]\q[◇终了,OnRetroSnakerGameOver]"
	for _y=0;_y<SMapY;_y++{
		for _x=0;_x<SMapX;_x++{
			if _y==0||_y==SMapY-1
				_txt+="\_l[%(_x*10+5),%(_y*10+60)]\_b[DATA_PATH\Game\RGB_Balls\BallRed10.png,inline]"
			else{
				if _x==0||_x==SMapX-1
					_txt+="\_l[%(_x*10+5),%(_y*10+60)]\_b[DATA_PATH\Game\RGB_Balls\BallRed10.png,inline]"
			}
		}
	}
	for _i=0;_i<RetroSnaker.node;_i++{
		_x=RetroSnaker.x[_i];_y=RetroSnaker.y[_i]
		_txt+="\_l[%(_x*10+5),%(_y*10+60)]\_b[DATA_PATH\Game\RGB_Balls\BallGreen10.png,inline]"
	}
	if food.yes==0 /*画面上有食物了就要显示*/{
		_x=food.x;_y=food.y
		_txt+="\_l[%(_x*10+5),%(_y*10+60)]\_b[DATA_PATH\Game\RGB_Balls\BallGreen10.png,inline]"
	}
	_txt
}
RetroSnaker.shape{
	/*
	for _i=0;_i<node;_i++{
		for _j=0; _j<node; _j++{
			if RetroSnaker[(RetroSnaker.y+_i-1)*SMapX+_j-1+RetroSnaker.x]
				RetroSnaker[(RetroSnaker.y+_i)*SMapX+_j+RetroSnaker.x]=RetroSnaker[(RetroSnaker.y+_i-1)*SMapX+_j-1+RetroSnaker.x]
		}
	}
	*/
	for i=RetroSnaker.node-1;i>0;i--{
		RetroSnaker.x[i]=RetroSnaker.x[i-1]
		RetroSnaker.y[i]=RetroSnaker.y[i-1]
	}
}
RetroSnaker.Move{
	RetroSnaker.shape
	if food.yes==1/*需要出现新食物*/{
		_exit=1
		while _exit{
			food.x=RAND(SMapX-2)+1
			food.y=RAND(SMapY-2)+1
			_exit = 0
			for _i=3;_i<RetroSnaker.node;_i++{
				if RetroSnaker.x[_i] == food.x && RetroSnaker.y[_i] == food.y
					_exit++
			}
		}
		food.yes=0/*画面上有食物了*/
		x=RetroSnaker.x[0];y=RetroSnaker.y[0]
	}
	case SDirect{
		if SDirect==Left
			x--
		elseif SDirect==Right
			x++
		elseif SDirect==Up
			y--
		elseif SDirect==Down
			y++
		RetroSnaker.x[0] = x
		RetroSnaker.y[0] = y
	}
	for _i=3;_i<RetroSnaker.node;_i++/*从蛇的第四节开始判断是否撞到自己了，因为蛇头为两节，第三节不可能拐过来*/{
		if RetroSnaker.x[_i]==RetroSnaker.x[0]&&RetroSnaker.y[_i]==RetroSnaker.y[0]{
			GameOver=1
			RetroSnaker.life=1
		}
	}
	if RetroSnaker.x[0]<1||RetroSnaker.x[0]>SMapX-2||RetroSnaker.y[0]<1||RetroSnaker.y[0]>SMapY-2/*蛇是否撞到墙壁*/{
		GameOver=1/*本次游戏结束*/
		RetroSnaker.life=1/*蛇死*/
	}
	if RetroSnaker.x[0]==food.x&&RetroSnaker.y[0]==food.y/*吃到食物以后*/{
		RetroSnaker.x[RetroSnaker.node]=-20
		RetroSnaker.y[RetroSnaker.node]=-20/*新的一节先放在看不见的位置,下次循环就取前一节的位置*/
		RetroSnaker.node++/*蛇的身体长一节*/
		food.yes=1/*画面上需要出现新的食物*/
		Score+=TOINT(10*RetroSnaker.speed)
		PrScore/*输出新得分*/
	}
}
CheckRetroSnakerStatus{//游戏状态
	if RetroSnaker.speed==1 && RetroSnaker.node>=10
		RetroSnaker.speed=2
	elseif RetroSnaker.speed==2 && RetroSnaker.node>=15
		RetroSnaker.speed=3
	elseif RetroSnaker.speed==3 && RetroSnaker.node>=25
		RetroSnaker.speed=4
	elseif RetroSnaker.speed==4 && RetroSnaker.node>=40
		RetroSnaker.speed=5
	elseif RetroSnaker.speed==5 && RetroSnaker.node>=60
		RetroSnaker.speed=6
	elseif RetroSnaker.speed==6 && RetroSnaker.node>=85
		RetroSnaker.speed=7
	elseif RetroSnaker.speed==7 && RetroSnaker.node>=115
		RetroSnaker.speed==8
	elseif RetroSnaker.speed==8 && RetroSnaker.node>=150
		RetroSnaker.speed=9
	RetroSnaker.timespeed=RetroSnakerspeed2(RetroSnaker.speed)
	if GameOver{
		if Score>0
			"\c\b[2]获得奖励金钱%(TOINT(2*Score))\x"
		--
		money+=TOINT(2*Score)
		iChanged = -1
		//LoadParams
		for i=0; i<NumScores; i++{
			if Score>RetroSnaker.Scores[i]{
				for m=NumScores-1; m>i; m--{
					RetroSnaker.Scores[m] = RetroSnaker.Scores[m-1]
				}
				iChanged = i
				break
			}
		}
		if iChanged>=0{
			RetroSnaker.Scores[iChanged] = Score
		}
		//OnHighScores
	}
}
OnShowRetroSnakerHighScores{//显示排行榜
	_s='\b[0]'
	for i=0; i<NumScores; i++{
		if RetroSnaker.Scores[i]{
			_s+="第%(i+1)名: %(RetroSnaker.Scores[i])分\n"
		}
		else{
			break
			PaintRetroSnaker
		}
	}
	if _s==''{
		_s = '没有记录'
	}
	_s+='\x'
	_s
}
OnRetroSnakeroption{
	_txt='\_q\b[2]\![set,choicetimeout,0]'
	_txt+="游戏速度：当前为%(RetroSnaker.speed)\n\q[◇1,OnRetroSnakeroption,1] \q[◇2,OnRetroSnakeroption,2] \q[◇3,OnRetroSnakeroption,3] \q[◇4,OnRetroSnakeroption,4] \q[◇5,OnRetroSnakeroption,5] \q[◇6,OnRetroSnakeroption,6] \q[◇7,OnRetroSnakeroption,7] \q[◇8,OnRetroSnakeroption,8] \q[◇9,OnRetroSnakeroption,9]"
	/*
	if reference0
		RetroSnaker.speed=reference0
	if reference1
		RetroSnaker.timespeed=reference1
	*/
	if reference0
		RetroSnaker.speed=reference0
	RetroSnaker.timespeed=RetroSnakerspeed(RetroSnaker.speed)
	_txt+='\n\n\q[◇返回,OnRetroSnakerTimer]\n\q[◇终了,OnRetroSnakerGameOver]'
	_txt
}
RetroSnakerspeed{
	_RetroSnaker.timespeed=250
	if TOINT(_argv[0])==1
		_RetroSnaker.timespeed=250
	elseif TOINT(_argv[0])==2
		_RetroSnaker.speed=168
	elseif TOINT(_argv[0])==3
		_RetroSnaker.timespeed=112
	elseif TOINT(_argv[0])==4
		_RetroSnaker.timespeed=75
	elseif TOINT(_argv[0])==5
		_RetroSnaker.timespeed=50
	elseif TOINT(_argv[0])==6
		_RetroSnaker.timespeed=33
	elseif TOINT(_argv[0])==7
		_RetroSnaker.timespeed=22
	elseif TOINT(_argv[0])==8
		_RetroSnaker.timespeed=15
	elseif TOINT(_argv[0])==9
		_RetroSnaker.timespeed=10
	else
		_RetroSnaker.timespeed=250
	_RetroSnaker.timespeed
}
RetroSnakerspeed2{
	_RetroSnaker.timespeed=250-0.3*RetroSnaker.node*RetroSnaker.speed
	if _RetroSnaker.timespeed<=0
		_RetroSnaker.timespeed=30
	_RetroSnaker.timespeed
}
OnRetroSnakerGameOver{//游戏结束
	playRetroSnaker=0
	ClearRetroSnakerVar
	'\0\s[0]\b[0]不玩了吗。'
}
ClearRetroSnakerVar:void{
	ERASEVAR('playRetroSnaker')
	ERASEVAR('RetroSnaker.x')
	ERASEVAR('RetroSnaker.y')
	ERASEVAR('RetroSnaker.x')
	ERASEVAR('RetroSnaker.y')
	ERASEVAR('node')
	ERASEVAR('RetroSnaker')
	ERASEVAR('RetroSnaker_')
	ERASEVAR('SDirect')
	ERASEVAR('food.yes')
	ERASEVAR('RetroSnaker.life')
	ERASEVAR('RetroSnaker.speed')
	ERASEVAR('SMapX')
	ERASEVAR('SMapY')
	ERASEVAR('RetroSnaker.node')
	ERASEVAR('food.x')
	ERASEVAR('food.y')
	ERASEVAR('GameOver')
}
